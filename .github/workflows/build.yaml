name: Build

on:
  workflow_dispatch:
    inputs:
      force:
        description: "Force rebuild"
        required: false
        default: false
        type: boolean
  schedule:
    - cron: "0 0 * * *"

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.prepare.outputs.matrix }}
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install PyYAML requests

      - name: Prepare packages
        id: prepare
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          matrix=$(
            python3 ./.github/scripts/prepare.py \
              --packages ./packages \
              --owner ${{ github.repository_owner }} \
              --registry ghcr.io \
              --force ${{ github.event.inputs.force }}
          )

          echo "matrix=${matrix}" >> $GITHUB_OUTPUT
          echo "${matrix}"

  build:
    runs-on: ubuntu-latest
    needs: prepare
    permissions:
      contents: read
      packages: write
    if: ${{ needs.prepare.outputs.matrix != '[]' }}
    strategy:
      matrix:
        package: ["${{ fromJson(needs.prepare.outputs.matrix) }}"]

    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Image
        uses: docker/build-push-action@v6
        id: build
        with:
          push: true
          build-args: |-
            VERSION=${{ matrix.package.version }}
          context: ./packages/${{ matrix.package.name }}
          platforms: ${{ join(matrix.package.platforms, ',') }}
          file: ./packages/${{ matrix.package.name }}/Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max
          labels: |-
            org.opencontainers.image.title=${{ matrix.package.name }}
            org.opencontainers.image.url=https://ghcr.io/${{ github.repository_owner }}/${{ matrix.package.name }}
            org.opencontainers.image.version=${{ matrix.package.version }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.vendor=${{ github.repository_owner }}
          tags: ${{ join(matrix.package.tags, ',') }}
